// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modals should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modals
    modalsConfig={
        Array [
            Object {
              "buttons": Array [],
              "content": "content",
              "key": "FOO",
              "title": "foo",
            },
            Object {
              "buttons": Array [],
              "key": "BAR",
              "title": "bar",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          buttons={Array []}
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
                    ModalManager {
                              "add": [Function],
                              "containers": Array [],
                              "data": Array [],
                              "handleContainerOverflow": true,
                              "hideSiblingNodes": true,
                              "isTopModal": [Function],
                              "modals": Array [],
                              "remove": [Function],
                            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
          title="foo"
>
          <div>
                    <content />
          </div>
</Modal>,
        <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          buttons={Array []}
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
                    ModalManager {
                              "add": [Function],
                              "containers": Array [],
                              "data": Array [],
                              "handleContainerOverflow": true,
                              "hideSiblingNodes": true,
                              "isTopModal": [Function],
                              "modals": Array [],
                              "remove": [Function],
                            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
          title="bar"
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "FOO",
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "buttons": Array [],
          "children": <div>
            <content />
</div>,
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [Function],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": false,
          "title": "foo",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <content />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "content",
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "BAR",
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "buttons": Array [],
          "children": undefined,
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [Function],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": false,
          "title": "bar",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            buttons={Array []}
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
                        ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
            title="foo"
>
            <div>
                        <content />
            </div>
</Modal>,
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            buttons={Array []}
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
                        ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
            title="bar"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "FOO",
          "nodeType": "class",
          "props": Object {
            "animation": true,
            "autoFocus": true,
            "backdrop": true,
            "bsClass": "modal",
            "buttons": Array [],
            "children": <div>
              <content />
</div>,
            "dialogComponentClass": [Function],
            "enforceFocus": true,
            "keyboard": true,
            "manager": ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            },
            "onHide": [Function],
            "renderBackdrop": [Function],
            "restoreFocus": true,
            "show": false,
            "title": "foo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <content />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "content",
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "BAR",
          "nodeType": "class",
          "props": Object {
            "animation": true,
            "autoFocus": true,
            "backdrop": true,
            "bsClass": "modal",
            "buttons": Array [],
            "children": undefined,
            "dialogComponentClass": [Function],
            "enforceFocus": true,
            "keyboard": true,
            "manager": ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            },
            "onHide": [Function],
            "renderBackdrop": [Function],
            "restoreFocus": true,
            "show": false,
            "title": "bar",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
